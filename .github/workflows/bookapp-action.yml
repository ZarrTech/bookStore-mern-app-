name: book Application
run-name: ${{ github.actor }}
on: 
  push:
    branches: 
      - main

env: 
  AWS_REGION: us-east-1
  AWS_ECR: book
  EKS_CLUSTER: my-cluster

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          distribution: 'node'
          node-version: '16'

      - name: setup sonarqube
        uses: warchant/setup-sonar-scanner@v7

      - name: run sonarqube
        run: |
         sonar-scanner \
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
           -Dsonar.sources=frontend,backend \
           -Dsonar.exclusions=frontend/node_modules/**,backend/node_modules/**,frontend/build/**,backend/build/**,frontend/dist/**,backend/dist/**,frontend/public/**,backend/public/**,frontend/coverage/**,backend/coverage/**,frontend/*.json,backend/*.json \
           -Dsonar.host.url=https://sonarcloud.io \
           -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
           -Dsonar.language=js \
           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
      
      - name: sonarQube quality gate
        id: quality_gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 10
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
  
  BUILD_AND_PUBLISH:
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Detect changed paths
        uses: dorny/paths-filter@v3
        id: filters
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

      - name: Build & Push Frontend Image
        if: steps.filters.outputs.frontend == 'true'
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY_FRONTEND }}
          repo: ${{ env.AWS_ECR }}-app
          region: ${{ env.AWS_REGION }}
          tags: latest,${{ github.run_number }}
          daemon_off: false
          dockerfile: frontend/Dockerfile
          context: ./frontend

      - name: Build & Push Backend Image
        if: steps.filters.outputs.backend == 'true'
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY_BACKEND }}
          repo: ${{ env.AWS_ECR }}-web
          region: ${{ env.AWS_REGION }}
          tags: latest,${{ github.run_number }}
          daemon_off: false
          dockerfile: backend/Dockerfile
          context: ./backend