name: book Application
run-name: ${{ github.actor }}
on: workflow_dispatch

env: 
  AWS_REGION: us-east-1
  AWS_ECR: book-app
  EKS_CLUSTER: my-cluster

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          distribution: 'node'
          node-version: '16'

      - name: setup sonarqube
        uses: warchant/setup-sonar-scanner@v7

      - name: run sonarqube
        run: |
         sonar-scanner \
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
           -Dsonar.sources=frontend,backend \
           -Dsonar.exclusions=frontend/node_modules/**,backend/node_modules/**,frontend/build/**,backend/build/**,frontend/dist/**,backend/dist/**,frontend/public/**,backend/public/**,frontend/coverage/**,backend/coverage/**,frontend/*.json,backend/*.json \
           -Dsonar.host.url=https://sonarcloud.io \
           -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
           -Dsonar.language=js \
           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
      
      - name: sonarQube quality gate
        id: quality_gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 10
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io